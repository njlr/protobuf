import os
import hashlib

genrule(
  name = 'addressbook-protobuf',
  out = 'out',
  srcs = [
    'addressbook.proto',
  ],
  cmd = 'mkdir $OUT && $(location //:protoc) --cpp_out=$OUT addressbook.proto',
)

# Convenience function for fetching a file out of a genrule result.
def extract(rule, path):
  filename, extension = os.path.splitext(path)
  name = filename + '-' + hashlib.sha256(rule + path).hexdigest()[:8] + extension
  genrule(
    name = name,
    out = name,
    cmd = 'cp $(location ' + rule + ')/' + path + ' $OUT',
  )
  return ':' + name

cxx_library(
  name = 'addressbook',
  header_namespace = '',
  exported_headers = {
    'addressbook.pb.h': extract(':addressbook-protobuf', 'addressbook.pb.h'),
  },
  srcs = [
    extract(':addressbook-protobuf', 'addressbook.pb.cc'),
  ],
  deps = [
    '//:protobuf',
  ],
)

cxx_binary(
  name = 'add_person',
  srcs = [
    'add_person.cc',
  ],
  deps = [
    ':addressbook',
  ],
)

cxx_binary(
  name = 'list_people',
  srcs = [
    'list_people.cc',
  ],
  deps = [
    ':addressbook',
  ],
)
